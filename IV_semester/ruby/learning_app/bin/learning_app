#!/usr/bin/ruby
$: << File.join(File.dirname(__FILE__), "/../lib")

require 'yaml'
require 'learning_app'

class LearningSystemShoesScript < Shoes
  include LearningSystem

  TITLE = "Learning system"

  # pages
  url '/', :index
  url '/register', :register
  url '/menu', :menu
  url '/add_word', :add_word

  USERS_DB = File.join(File.dirname(__FILE__), '/../users.yaml')

  def index
    background "#333"

    @@user = User.new("username", "password") 
    @@user_manager = UserHandler.new(YAML.load_file(USERS_DB))

    stack :margin_top => 10 do
      subtitle TITLE, :align => "center" 

      @content = stack :top => 80, :left => 300, :align => "center" do
        @@username_field = edit_line :text => @@user.name, :width => 150
        @@password_field = edit_line :text => @@user.pass, :width => 150, :secret => true
      
        button "login", :margin_left => 40, :margin_top => 10, :margin_bottom => 10 do
          @@user = User.new(@@username_field.text, @@password_field.text)
          begin
            @@user = @@user_manager.login(@@user)
            visit '/menu'
          rescue Exception => msg
            alert "#{msg}"
          end
        end
        para("First time here? " ,
             link("Sign up", :click => "/register"))
      end
    end
  end

  # save state
  def save_state
    File.open(USERS_DB, 'w') do |out|
      YAML.dump(@@user_manager.users, out)
    end
  end

  def register
    background "#333"
    stack :margin_top => 10 do
      subtitle TITLE, :align => "center" 

      stack :top => 80, :left => 300, :align => "center" do
        @@username_field = edit_line :text => @@user.name, :width => 150
        @@password_field = edit_line :text => @@user.pass, :width => 150, :secret => true
        button "register me", :margin_left => 15, :margin_top => 10, :margin_bottom => 10  do
          begin
            @@user_manager.register(User.new(@@username_field.text, @@password_field.text))

            # save state
            save_state

            alert "User #{@@username_field.text} was succesfully registered"
            visit "/menu"
          rescue Exception => msg
            alert "#{msg}"
          end
        end

        para("Naah.. I want to ",
          link("go back", :click => "/"))
      end
    end
  end

  def menu
    background "#333"

   @upper_stack = stack :height => 55 do
      para("Hello, #{@@user.name}. What do you want to do?", :stroke => white, :top => 20, :align => "center", :font => "Arial 26px" )
   end


   flow  do
      stack do
        @m = image "/home/hanniph/Downloads/photos/study.jpg", :width => 225, :height => 175, :top => 80, :left => 20
        @m.hover do
          fill rgb(0.0, 0.0, 0.0, 0.7)
          nostroke
          @l = rect(@m.left - 2, @m.top-2 + @upper_stack.height, @m.width + 3, @m.height + 3)
          @mes = para("WORDS", :font => "Arial 32px", :stroke => white, :top => @m.top + @upper_stack.height + @m.height / 2, :left => @m.left)
        end
        @m.leave do
          @l.hide
          @mes.hide
        end
         @m.click { visit "/words" }
      end

      stack do
        @m2 = image "/home/hanniph/Downloads/photos/test.jpg", :width => 225, :height => 175, :top => 80, :left => 265
        @m2.hover do
          fill rgb(0.0, 0.0, 0.0, 0.7)
          nostroke
          @l2 = rect(@m2.left - 2, @m2.top-2 + @upper_stack.height , @m2.width + 3, @m2.height + 3)
          @mes2 = para("TESTS", :font => "Arial 32px", :stroke => white, :top => @m2.top + @upper_stack.height + @m2.height / 2, :left => @m2.left)
        end
        @m2.leave do
          @l2.hide
          @mes2.hide
        end
         @m2.click { visit "/tests" }
      end

      stack do
        @m3 = image "/home/hanniph/Downloads/photos/quiz.jpg", :width => 225, :height => 175, :top => 80, :left => 510
        @m3.hover do
          fill rgb(0.0, 0.0, 0.0, 0.7)
          nostroke
          @l3 = rect(@m3.left - 2, @m3.top-2 + @upper_stack.height , @m3.width + 3, @m3.height + 3)
          @mes3 = para("QUIZZES", :font => "Arial 32px", :stroke => white, :top => @m3.top + @upper_stack.height + @m3.height / 2, :left => @m3.left)
        end
        @m3.leave do
          @l3.hide
          @mes3.hide
        end
         @m3.click { visit "/quizzes" }
      end
    end
  end

=begin
  def user
    flow :margin => 5 do
      @left = stack :width => 0.3 do
        para @@user.name, :margin_top => 5, :margin_left => 14, :size => 20
        para "has registered: ", :stroke => red 
        para "Words:\t#{@@user.words.size}\n",
             "Tests:\t#{@@user.tests.size}\n",
             "Quizzes:\t0", 
               :margin_left => 20, :size => 8 
        para "can: ", :stroke => red 
        para(
          link("Add word\n", :click => '/add_word'),
          link("Add quiz\n", :click => '/add_test'),
          link("Take quiz\n", :click => '/take_quiz'),
            :margin_left => 20, :size => 8)
      end
      @right = stack :width => 0.6 do
        flow :align => "center" do
          para(link("Words", :click => '/user'), :size => 12, :margin_left => 30)
          para(link("Tests", :click => '/user'), :size => 12, :margin_left => 30)
          para(link("Quizzes", :click => '/user'), :size => 12, :margin_left => 30)
        end

        # showing user's words
        words = []
        @@user.each_word do |w|
           words.push "#{words.size / 4 + 1}\t", link(w.value, :click => '/user', :size => 10, :margin => 0), "\t#{w.times_answered}", "\t#{w.times_guessed}\n"
        end
        para( words.each {|w| strong w }, :size => 10)
      end
    end
  end

  def add_word
    stack :margin => 30 do
        subtitle "Add a new word, #{@@user.name}"
        @value = edit_line :width => 400, :text => 'words value'
        @translation = edit_line :width => 400, :text => 'meaning or translation'
        @hint = edit_line :width => 400, :text => 'hint (not required)'
        button "add word" do
          #@hint.text = nil if @hind.text =~ /^hint \((.)*\)&/
          @@user.add_word(Word.new(@value.text, @translation.text, @hint.text))
          save_state
          visit '/user'
        end
    end
  end
=end
end

Shoes.app :width => 755, :height => 400, :title => 'FL Learning system'
