#!/usr/bin/env shoes
$: << File.join(File.dirname(__FILE__), "/../lib")

require 'yaml'
require 'learning_app'
require 'table_widget'
require 'add_quiz_widget'

class LearningSystemShoesScript < Shoes
  include LearningSystem

  TITLE = "Learning system"

  # pages
  url '/', :index
  url '/register', :register
  url '/menu', :menu
  url '/words', :words
  url '/tests', :tests
  url '/quizzes', :quizzes
  url '/add_word/(\w+)', :add_word
  url '/add_quiz', :add_quiz
  url '/edit_quiz', :edit_quiz

  # other global variables => regexp segfaults 
  @@form_words_value = 'words value'
  @@form_translation = 'meaning or translation'
  @@form_hint = 'hint (not required)'

  USERS_DB = File.join(File.dirname(__FILE__), '/../users.yaml')

  # save state
  def self.save_state
    File.open(USERS_DB, 'w') do |out|
      YAML.dump(@@user_manager.users, out)
    end
  end

  def index
    background "#333"

    #@@user = User.new("username", "password") 
    @@user = User.new("joe", "informatikas") 
    @@user_manager = UserHandler.new(YAML.load_file(USERS_DB))

    stack :margin_top => 10 do
      subtitle TITLE, :align => "center", :stroke => white

      @content = stack :top => 80, :left => 300, :align => "center" do
        @@username_field = edit_line :text => @@user.name, :width => 150
        @@password_field = edit_line :text => @@user.pass, :width => 150, :secret => true
      
        button "login", :margin_left => 40, :margin_top => 10, :margin_bottom => 10 do
          @@user = User.new(@@username_field.text, @@password_field.text)
          begin
            @@user = @@user_manager.login(@@user)
            visit '/menu'
          rescue Exception => msg
            alert "#{msg}"
          end
        end
        para("First time here? " ,
             link("Sign up", :click => "/register"))
      end
    end
  end

  def register
    background "#333"
    stack :margin_top => 10 do
      subtitle TITLE, :align => "center" 

      stack :top => 80, :left => 300, :align => "center" do
        @@username_field = edit_line :text => @@user.name, :width => 150
        @@password_field = edit_line :text => @@user.pass, :width => 150, :secret => true
        button "register me", :margin_left => 15, :margin_top => 10, :margin_bottom => 10  do
          begin
            @@user_manager.register(User.new(@@username_field.text, @@password_field.text))

            # save state
            LearningSystemShoesScript.save_state

            alert "User #{@@username_field.text} was succesfully registered"
            visit "/menu"
          rescue Exception => msg
            alert "#{msg}"
          end
        end

        para("Naah.. I want to ",
          link("go back", :click => "/"))
      end
    end
  end

  def menu
    background "#333"

   @upper_stack = stack :height => 55 do
      para("Hello, #{@@user.name}. What do you want to do?", :stroke => white, :top => 20, :align => "center", :font => "Arial 26px" )
   end

   flow  do
      stack do
        @m = image "/home/hanniph/Downloads/photos/study.jpg", :width => 225, :height => 175, :top => 80, :left => 20
        @m.hover do
          fill rgb(0.0, 0.0, 0.0, 0.7)
          nostroke
          @l = rect(@m.left - 2, @m.top-2 + @upper_stack.height, @m.width + 3, @m.height + 3)
          @mes = para("WORDS", :font => "Arial 32px", :stroke => white, :top => @m.top + @upper_stack.height + @m.height / 2, :left => @m.left)
        end
        @m.leave do
          @l.hide
          @mes.hide
        end
         @m.click { visit "/words" }
      end

      stack do
        @m2 = image "/home/hanniph/Downloads/photos/test.jpg", :width => 225, :height => 175, :top => 80, :left => 265
        @m2.hover do
          fill rgb(0.0, 0.0, 0.0, 0.7)
          nostroke
          @l2 = rect(@m2.left - 2, @m2.top-2 + @upper_stack.height , @m2.width + 3, @m2.height + 3)
          @mes2 = para("TESTS", :font => "Arial 32px", :stroke => white, :top => @m2.top + @upper_stack.height + @m2.height / 2, :left => @m2.left)
        end
        @m2.leave do
          @l2.hide
          @mes2.hide
        end
         @m2.click { visit "/tests" }
      end

      stack do
        @m3 = image "/home/hanniph/Downloads/photos/quiz.jpg", :width => 225, :height => 175, :top => 80, :left => 510
        @m3.hover do
          fill rgb(0.0, 0.0, 0.0, 0.7)
          nostroke
          @l3 = rect(@m3.left - 2, @m3.top-2 + @upper_stack.height , @m3.width + 3, @m3.height + 3)
          @mes3 = para("QUIZZES", :font => "Arial 32px", :stroke => white, :top => @m3.top + @upper_stack.height + @m3.height / 2, :left => @m3.left)
        end
        @m3.leave do
          @l3.hide
          @mes3.hide
        end
         @m3.click { visit "/quizzes" }
      end
    end
  end

  def tests
    background "#333"
    flow do
      stack :top => 10, :left => 10 do
        if @@user.words.size == 1
          @title = "TEST" 
        else
          @title = "TESTS"
        end
        para "      #{@@user.tests.size}\n #{@title}", :stroke => white, :font => "32px"
        stack :top => 100, :left => 20 do
          para link("Add new quiz", :click => '/add_test'), :margin => 0
          para link("Go back", :click => '/menu'), :margin => 0
        end
      end
    end
  end

  def quizzes
    background "#333"

    flow do
      stack :top => 10, :left => 10 do
        if @@user.words.size == 1
          @title = "QUIZ" 
        else
          @title = "QUIZZES"
        end

        para "      #{@@user.quizzes.size}\n #{@title}", :stroke => white, :font => "32px"
        stack :top => 100, :left => 20 do
          para link("Add new quiz", :click => '/add_quiz'), :margin => 0
          para link("Go back", :click => '/menu'), :margin => 0
        end
      end
      stack do
        quizzes = []
        @@user.each_quiz {|q| quizzes << [ q.name, q.times_taken ] }

        if @@user.quizzes.size > 10
          @size = 10
        else
          @size = @@user.quizzes.size
        end

        @wq = table(:top=>-120, :left=>300, :rows=> @size, :headers=>[["Name", 250], ["TT", 75]], :items=> quizzes, :blk=> nil)   

        button "edit selected", :margin_top => 40, :margin_left => 20 do
          unless @wq.selected.nil?
            @@quiz_to_edit = @@user.quiz(quizzes[@wq.selected][0]) 
            visit '/edit_quiz'
          end
        end

        button "remove selected", :margin_top => 1, :margin_left => 10 do
          @@user.remove_quiz( @@user.quiz(quizzes[@wq.selected][0]) )

          LearningSystemShoesScript.save_state
          visit '/quizzes'
        end
      end
    end
  end

  def edit_quiz
    background "#333"
    quizzer(:title => "Edit this quiz, #{@@user.name}", :user => @@user, :quiz => @@quiz_to_edit, :mode => 'edit')
  end

  def add_quiz
    background "#333"
    quizzer(:title => "Add a new quiz, #{@@user.name}", :user => @@user, :mode => 'add')
  end

  def words
    background "#333"

    flow do
      stack :top => 10, :left => 100 do
        items = []
        @@user.each_word {|w| items << [w.value, w.translation, w.hint, w.times_answered, w.times_guessed] }

        if @@user.words.size > 10
          @size = 10
        else
          @size = @@user.words.size
        end

        @t = table(:top=>20, :left=>80, :rows=> @size, :headers=>[["Value", 150], ["Translation", 150], ["Hint", 150], ["TA", 35], ["TG", 55]], :items=> items, :blk=> nil)   

        button "remove selected", :top => 300, :left => -85 do
          word_to_delete = items.delete_at(@t.selected)
          @@user.remove_word( @@user.word({ :value => word_to_delete[0] }))
          LearningSystemShoesScript.save_state
          visit '/words'
        end

        button "edit selected", :top => 270, :left => -75 do
          # pass to add_word with specified parameters
          word_to_edit = items.values_at(@t.selected)
          @@form_words_value = word_to_edit[0][0]
          @@form_translation = word_to_edit[0][1]
          @@form_hint = word_to_edit[0][2] 

          visit '/add_word/true'
        end
      end

      stack :top => 10, :left => 10 do
        if @@user.words.size == 1
          @title = "WORD" 
        else
          @title = "WORDS"
        end

        para "      #{@@user.words.size}\n #{@title}", :stroke => white, :font => "32px"
        stack :top => 100, :left => 20 do
          para link("Add new word", :click => '/add_word/false'), :margin => 0
          para link("Go back", :click => '/menu'), :margin => 0
        end
      end
    end
  end

  def add_word(state)
    background "#333"

    if state == 'true'
      state = true
    else
      state = false
    end

    stack :margin_top => 10 do
      subtitle "Add a new word, #{@@user.name}", :stroke => white, :align => "center"

      stack :top => 80, :left => 160, :align => "center" do
        @value = edit_line :width => 400, :text => @@form_words_value 
        @translation = edit_line :width => 400, :text => @@form_translation
        @hint = edit_line :width => 400, :text => @@form_hint 

        button "add word", :margin_left => 150, :margin_top => 10, :margin_bottom => 10  do
          begin
            @hint.text = nil if @hint.text =~ /^hint (.*)$/
            @@user.add_word(Word.new(@value.text, @translation.text, @hint.text), state)
            LearningSystemShoesScript.save_state
            visit '/words'
          rescue Exception => msg
            alert msg
          end
        end
        para(link("oh, nervermind..", :click => "/words"), :margin_left => 150)
      end
    end

    #restoring variables
    @@form_words_value = 'words value'
    @@form_translation = 'meaning or translation'
    @@form_hint = 'hint (not required)'
  end

end

Shoes.app :width => 755, :height => 400, :title => 'FL Learning system', :resizable => false
